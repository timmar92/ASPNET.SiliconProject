@model AccountSecurityViewModel

@{
    ViewData["Title"] = $"{Model.ProfileInfo.FirstName} {Model.ProfileInfo.LastName}";
}

<div class="container">
    <div id="account-details">
        <aside>
            <div class="profile-info">
                <img src="/images/@Model.ProfileInfo.ProfileImageUrl" alt="@($"{Model.ProfileInfo.FirstName} {Model.ProfileInfo.LastName}'s profile image")" />
                <h5>@($"{Model.ProfileInfo.FirstName} {Model.ProfileInfo.LastName}")</h5>
                <p>@Model.ProfileInfo.Email</p>
            </div>

            <nav>
                <a class="btn-account-nav @(ViewContext.RouteData.Values["Action"].ToString() == "Details" ? "active" : "")" asp-controller="Account" asp-action="Details">Account Details</a>
                <a class="btn-account-nav @(ViewContext.RouteData.Values["Action"].ToString() == "Security" ? "active" : "")" asp-controller="Account" asp-action="Security">Security</a>
                <a class="btn-account-nav @(ViewContext.RouteData.Values["Action"].ToString() == "SignOut" ? "active" : "")" asp-controller="Account" asp-action="SavedCourses">Saved Courses</a>
                <a class="btn-account-nav" asp-controller="Auth" asp-action="SignOut">Sign out</a>

            </nav>
        </aside>

        <section id="account-security">
            <div class="container">
                <div class="basic-info-security">
                    @if(Model.ProfileInfo.IsExternalAccount == true)
                    {
                        <h2>Account Details</h2>
                        <h5>External account, password cannot be changed</h5>
                    }
                    else
                    {
                        <form method="post" asp-controller="Account" asp-action="ChangePassword" novalidate>
                            <h2>Account Details</h2>
                            <h5>Password</h5>

                            <div class="content">
                                <div id="form-current-password" class="input-group">
                                    <label asp-for="ChangePasswordForm.CurrentPassword"></label>
                                    <span asp-validation-for="ChangePasswordForm.CurrentPassword"></span>
                                    <input asp-for="ChangePasswordForm.CurrentPassword" />
                                </div>

                                <div id="form-new-password" class="input-group">
                                    <label asp-for="ChangePasswordForm.NewPassword"></label>
                                    <span asp-validation-for="ChangePasswordForm.NewPassword"></span>
                                    <input asp-for="ChangePasswordForm.NewPassword" />
                                </div>

                                <div id="form-confirm-password" class="input-group">
                                    <label asp-for="ChangePasswordForm.ConfirmNewPassword"></label>
                                    <span asp-validation-for="ChangePasswordForm.ConfirmNewPassword"></span>
                                    <input asp-for="ChangePasswordForm.ConfirmNewPassword" data-val-equalto-other="ChangePasswordForm.NewPassword" />
                                </div>

                                <div class="form-buttons">
                                    <button class="btn-gray" type="reset">Cancel</button>
                                    <button class="btn-theme" type="submit">Change password</button>
                                </div>
                            </div>
                        </form>

                        @if(TempData["SuccessMessage"] != null)
                        {
                            <div class="success-message">
                                @TempData["SuccessMessage"]
                            </div>
                        }
                        @if(TempData["ErrorMessage"] != null)
                        {
                            <div class="error-message">
                                @TempData["ErrorMessage"]
                            </div>
                        }
                    }
                </div>
                <hr />
            </div>

        </section>
    </div>
</div>

@await Html.PartialAsync("_ValidationScriptPartial")